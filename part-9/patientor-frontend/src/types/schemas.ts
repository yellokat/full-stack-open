// noinspection DuplicatedCode

import z from 'zod';
import {DiagnosisCodes, HealthCheckRating} from "./types";

// ===========================================================================
// New Diagnosis Base (id field is generated by server)
// ===========================================================================

const DiagnosisBaseSchema = z.object({
    id: z.string(),
    description: z.string(),
    date: z.string().date(),
    specialist: z.string(),
    diagnosisCodes: z.array(z.nativeEnum(DiagnosisCodes)).optional(),
});

const NewDiagnosisBaseSchema = z.object({
    description: z.string(),
    date: z.string().date(),
    specialist: z.string(),
    diagnosisCodes: z.array(z.nativeEnum(DiagnosisCodes)).optional(),
});

// ===========================================================================
// Diagnosis variant - Health Check
// ===========================================================================

const HealthCheckEntrySchema = DiagnosisBaseSchema.extend({
    type: z.literal("HealthCheck"),
    healthCheckRating: z.nativeEnum(HealthCheckRating)
});

const NewHealthCheckEntrySchema = NewDiagnosisBaseSchema.extend({
    type: z.literal("HealthCheck"),
    healthCheckRating: z.nativeEnum(HealthCheckRating)
});

// ===========================================================================
// Diagnosis variant - Hospital
// ===========================================================================

const NewDischargeEntrySchema = z.object({
    date: z.string().date(),
    criteria: z.string(),
});

const HospitalEntrySchema = DiagnosisBaseSchema.extend({
    type: z.literal("Hospital"),
    discharge: NewDischargeEntrySchema,
});

const NewHospitalEntrySchema = NewDiagnosisBaseSchema.extend({
    type:z.literal("Hospital"),
    discharge: NewDischargeEntrySchema,
});

// ===========================================================================
// Diagnosis variant - Occupational Health Care
// ===========================================================================

const OccupationalHealthcareEntrySchema = DiagnosisBaseSchema.extend({
    type: z.literal("OccupationalHealthcare"),
    employerName: z.string(),
});

const NewOccupationalHealthcareEntrySchema = NewDiagnosisBaseSchema.extend({
    type: z.literal("OccupationalHealthcare"),
    employerName: z.string(),
});

// ===========================================================================
// Diagnosis Schema Union
// ===========================================================================

export const EntrySchema = z.discriminatedUnion("type",[
    HealthCheckEntrySchema,
    OccupationalHealthcareEntrySchema,
    HospitalEntrySchema,
]);

export const NewEntrySchema = z.discriminatedUnion("type", [
    NewHealthCheckEntrySchema,
    NewHospitalEntrySchema,
    NewOccupationalHealthcareEntrySchema,
]);